version: "3.9"
services:
  # Databases
  customers_db:
    image: postgres:12-alpine
    container_name: customers-database
    ports:
      - "9000:5432"
    volumes:
      - ./data/customers_db:/var/lib/postgresql/data
      - ./sql/init-customers.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: customers
      
  customers:
    image: customers
    container_name: customers-restful
    ports:
      - "8000:8000"
    restart: always
    environment:
      DB_HOST: customers_db
      DB_PORT: 5432

  booksms_db:
    image: postgres:12-alpine
    container_name: bookslib-database
    ports:
      - "8999:5432"
    volumes:
      - ./data/bookslib_db:/var/lib/postgresql/data
      - ./sql/init-bookslib.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bookslib

  bookslib:
    image: bookslib
    container_name: bookslib-restful
    ports:
      - "8001:8001"
    restart: always
    environment:
      DB_HOST: booksms_db
      DB_PORT: 5432

  orders_db:
    image: postgres:12-alpine
    container_name: orders-database
    ports:
      - "8998:5432"
    volumes:
      - ./data/orders_db:/var/lib/postgresql/data
      - ./sql/init-orders.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orders

  orders:
    image: orders
    container_name: orders-restful
    ports:
      - "8002:8002"
    restart: always
    environment:
      DB_HOST: orders_db
      DB_PORT: 5432